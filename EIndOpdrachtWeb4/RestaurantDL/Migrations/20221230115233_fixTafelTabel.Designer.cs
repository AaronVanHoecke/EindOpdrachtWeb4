// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantDL;

#nullable disable

namespace RestaurantDL.Migrations
{
    [DbContext(typeof(RestaurantBeheerContext))]
    [Migration("20221230115233_fixTafelTabel")]
    partial class fixTafelTabel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantDL.Model.GebruikerEF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocatieId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefoonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verwijderd")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LocatieId");

                    b.ToTable("Gebruiker");
                });

            modelBuilder.Entity("RestaurantDL.Model.LocatieEF", b =>
                {
                    b.Property<int>("LocatieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocatieId"));

                    b.Property<string>("GemeenteNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Huisnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Postcode")
                        .HasColumnType("int");

                    b.Property<string>("StraatNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocatieId");

                    b.ToTable("Locatie");
                });

            modelBuilder.Entity("RestaurantDL.Model.ReservatieEF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AantalPlaatsen")
                        .HasColumnType("int");

                    b.Property<int>("ContactPersoonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantInfoRestaurantID")
                        .HasColumnType("int");

                    b.Property<int>("Tafelnummer")
                        .HasColumnType("int");

                    b.Property<int>("Uur")
                        .HasColumnType("int");

                    b.Property<bool>("Verwijderd")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("ContactPersoonId");

                    b.HasIndex("RestaurantInfoRestaurantID");

                    b.ToTable("Reservatie");
                });

            modelBuilder.Entity("RestaurantDL.Model.RestaurantEF", b =>
                {
                    b.Property<int>("RestaurantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keuken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocatieId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefoonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verwijderd")
                        .HasColumnType("bit");

                    b.HasKey("RestaurantID");

                    b.HasIndex("LocatieId");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("RestaurantDL.Model.TafelEF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AantalStoelen")
                        .HasColumnType("int");

                    b.Property<bool>("Beschikbaar")
                        .HasColumnType("bit");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int");

                    b.Property<bool>("Verwijderd")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Tafel");
                });

            modelBuilder.Entity("RestaurantDL.Model.GebruikerEF", b =>
                {
                    b.HasOne("RestaurantDL.Model.LocatieEF", "Locatie")
                        .WithMany()
                        .HasForeignKey("LocatieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Locatie");
                });

            modelBuilder.Entity("RestaurantDL.Model.ReservatieEF", b =>
                {
                    b.HasOne("RestaurantDL.Model.GebruikerEF", "ContactPersoon")
                        .WithMany()
                        .HasForeignKey("ContactPersoonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantDL.Model.RestaurantEF", "RestaurantInfo")
                        .WithMany("Reserveringen")
                        .HasForeignKey("RestaurantInfoRestaurantID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContactPersoon");

                    b.Navigation("RestaurantInfo");
                });

            modelBuilder.Entity("RestaurantDL.Model.RestaurantEF", b =>
                {
                    b.HasOne("RestaurantDL.Model.LocatieEF", "Locatie")
                        .WithMany()
                        .HasForeignKey("LocatieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Locatie");
                });

            modelBuilder.Entity("RestaurantDL.Model.TafelEF", b =>
                {
                    b.HasOne("RestaurantDL.Model.RestaurantEF", "Restaurant")
                        .WithMany("Tafels")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantDL.Model.RestaurantEF", b =>
                {
                    b.Navigation("Reserveringen");

                    b.Navigation("Tafels");
                });
#pragma warning restore 612, 618
        }
    }
}
